#CXX = clang-8.0
#CXX = g++-7.4

PREFIX ?= /usr/local

JIT=LLVMJIT
#JIT=LIBJIT

LLVMSRC = llvmjit.cpp
LLVMINC = $(LLVM_HOME)/include
LLVMLIB = $(LLVM_HOME)/lib
LLVMLIBS = $(shell llvm-config --ldflags --libs)

LIBJITSRC  = libjit.cpp
LIBJITINC  = $(LIBJIT_HOME)/include
LIBJITLIB  = $(LIBJIT_HOME)/lib
LIBJITLIBS = $(LIBJITLIB)/libjit.a

ifeq ($(JIT), LIBJIT)
    JITSRC=$(LIBJITSRC)
    JITINC=$(LIBJITINC)
    JITLIBS=$(LIBJITLIBS)
else
    JITSRC=$(LLVMSRC)
    JITINC=$(LLVMINC)
    JITLIBS=$(LLVMLIBS)
endif

CXXFLAGS += -fPIC -std=c++17 -O3 -D$(JIT) -I$(CASH_HOME)/include -I$(JITINC) -Wall -Wextra -pedantic
#CXXFLAGS += -fPIC -std=c++17 -O0 -g -DLLVMJIT -I$(CASH_HOME)/include -Wall -Wextra -pedantic
LDFLAGS += -shared $(JITLIBS) -ldl -pthread

PROJECT = libcash
TARGET_DIR = lib
SOURCE_DIR = ../src

SRCS =  $(JITSRC) \
        simjit.cpp \
        utils.cpp \
        platform.cpp  \
        system.cpp \
        logic.cpp \
        lnode.cpp \
        lnodeimpl.cpp \
        ioimpl.cpp \
        proxyimpl.cpp \
        cdimpl.cpp \
        litimpl.cpp \
        regimpl.cpp \
        memimpl.cpp \
        selectimpl.cpp \
        opimpl.cpp \
        bindimpl.cpp \
        timeimpl.cpp \
        assertimpl.cpp \
        printimpl.cpp \
        udfimpl.cpp \
        deviceimpl.cpp \
        context.cpp \
        brconv.cpp \
        compile.cpp \
        simref.cpp \
        simulatorimpl.cpp \
        tracerimpl.cpp \
        verilogwriter.cpp \
        firrtlwriter.cpp \
        eda/altera/avalon_sim.cpp

OBJS = $(SRCS:.cpp=.o)
#$(info objs=$(OBJS))

.PHONY: all

all: $(TARGET_DIR)/$(PROJECT).so

$(TARGET_DIR)/$(PROJECT).so: $(OBJS)
	@mkdir -p $(dir $@)
	$(CXX) $^ $(LDFLAGS) -o $@

$(OBJS): %.o: $(SOURCE_DIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -c $< -o $@
	
.depend: $(addsuffix .depend,$(SRCS:.cpp=))

clean-depend:
	rm -f .depend

%.depend: clean-depend
	$(CXX) $(CXXFLAGS) -MM -MT $*.o $(SOURCE_DIR)/$*.cpp >> .depend

clean:
	rm -rf $(OBJS) *.gcda *.gcno .depend *~ *\# $(TARGET_DIR)

ifneq ($(MAKECMDGOALS),clean)
    -include .depend
endif
